class CcController < ApplicationController
	def index
		headers["ContentType"] = "Image/BMP"
		headers["Expires"] = "-9999"
		headers["Pragma"] = "no-cache"
		headers["Cache-Control"] = "no-cache"
	
		vCodes=[]
		vNumberData=[]
		cOdds = 0 	         	# 杂点出现的机率
		cAmount = 36         	#文字数量
		cCode = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		cAmount = 9          	#只取数字部分;
		
		vColorData=[]
		vColorData[0]=""
		vColorData[1]=""
		vColorData[0]<<0<<0<<0   	     # 蓝0，绿0，红0（黑色）
		
		vColorData[1] <<250<<236<<211    #蓝250，绿236，红211（浅蓝色）
			
		vCodes=""
		vCode=[]
		for i in 0..3 
			vCode[i] = rand(cAmount)
			vCodes << cCode[vCode[i]] 
		end
		session[:cookiecodeverify]=vCodes   #记录入Session 
		#print vCodes+"\n"
	
		vNumberData[0] = "1110000111110111101111011110111101001011110100101111010010111101001011110111101111011110111110000111"
		vNumberData[1] = "1111011111110001111111110111111111011111111101111111110111111111011111111101111111110111111100000111"
		vNumberData[2] = "1110000111110111101111011110111111111011111111011111111011111111011111111011111111011110111100000011"
		vNumberData[3] = "1110000111110111101111011110111111110111111100111111111101111111111011110111101111011110111110000111"
		vNumberData[4] = "1111101111111110111111110011111110101111110110111111011011111100000011111110111111111011111111000011"
		vNumberData[5] = "1100000011110111111111011111111101000111110011101111111110111111111011110111101111011110111110000111"
		vNumberData[6] = "1111000111111011101111011111111101111111110100011111001110111101111011110111101111011110111110000111"
		vNumberData[7] = "1100000011110111011111011101111111101111111110111111110111111111011111111101111111110111111111011111"
		vNumberData[8] = "1110000111110111101111011110111101111011111000011111101101111101111011110111101111011110111110000111"
		vNumberData[9] = "1110001111110111011111011110111101111011110111001111100010111111111011111111101111011101111110001111"
		vNumberData[10] = "1111011111111101111111101011111110101111111010111111101011111100000111110111011111011101111000100011"
		vNumberData[11] = "1000000111110111101111011110111101110111110000111111011101111101111011110111101111011110111000000111"
		vNumberData[12] = "1110000011110111101110111110111011111111101111111110111111111011111111101111101111011101111110001111"
		vNumberData[13] = "1000001111110111011111011110111101111011110111101111011110111101111011110111101111011101111000001111"
		vNumberData[14] = "1000000111110111101111011011111101101111110000111111011011111101101111110111111111011110111000000111"
		vNumberData[15] = "1000000111110111101111011011111101101111110000111111011011111101101111110111111111011111111000111111"
		vNumberData[16] = "1110000111110111011110111101111011111111101111111110111111111011100011101111011111011101111110001111"
		vNumberData[17] = "1000100011110111011111011101111101110111110000011111011101111101110111110111011111011101111000100011"
		vNumberData[18] = "1100000111111101111111110111111111011111111101111111110111111111011111111101111111110111111100000111"
		vNumberData[19] = "1110000011111110111111111011111111101111111110111111111011111111101111111110111110111011111000011111"
		vNumberData[20] = "1000100011110111011111011011111101011111110001111111010111111101101111110110111111011101111000100011"
		vNumberData[21] = "1000111111110111111111011111111101111111110111111111011111111101111111110111111111011110111000000011"
		vNumberData[22] = "1000100011110010011111001001111100100111110101011111010101111101010111110101011111010101111001010011"
		vNumberData[23] = "1000100011110011011111001101111101010111110101011111010101111101100111110110011111011001111000110111"
		vNumberData[24] = "1110001111110111011110111110111011111011101111101110111110111011111011101111101111011101111110001111"
		vNumberData[25] = "1000000111110111101111011110111101111011110000011111011111111101111111110111111111011111111000111111"
		vNumberData[26] = "1110001111110111011110111110111011111011101111101110111110111011111011101001101111011001111110001011"
		vNumberData[27] = "1000001111110111011111011101111101110111110000111111010111111101101111110110111111011101111000110011"
		vNumberData[28] = "1110000011110111101111011110111101111111111001111111111001111111111011110111101111011110111100000111"
		vNumberData[29] = "1000000011101101101111110111111111011111111101111111110111111111011111111101111111110111111110001111"
		vNumberData[30] = "1000100011110111011111011101111101110111110111011111011101111101110111110111011111011101111110001111"
		vNumberData[31] = "1000100011110111011111011101111101110111111010111111101011111110101111111010111111110111111111011111"
		vNumberData[32] = "1001010011110101011111010101111101010111110101011111001001111110101111111010111111101011111110101111"
		vNumberData[33] = "1000100011110111011111101011111110101111111101111111110111111110101111111010111111011101111000100011"
		vNumberData[34] = "1000100011110111011111011101111110101111111010111111110111111111011111111101111111110111111110001111"
		vNumberData[35] = "1100000011110111011111111101111111101111111110111111110111111111011111111011111111101110111100000011"

		#输出图像文件头
		pich=""
		pich <<66<<77<<230<<4<<"\0\0\0\0\0\0"<<54<<"\0\0\0"<<40<<"\0\0\0"<<40<<"\0\0\0"<<10<<"\0\0\0\1\0"
		
		# 输出图像信息头
		pich <<24<<"\0\0\0\0\0"<<176<<4<<0<<0<<18<<11<<0<<0<<18<<11<<"\0\0\0\0\0\0\0\0\0\0"
		
		img=""
		 for i in  0..9  						            # 历经所有行
			   for ii in  0..3  							# 历经所有字
					 for iii in 0..9 	    				# 历经所有像素 // 逐行、逐字、逐像素地输出图像数据
						   if (rand(100)< cOdds )	        # 随机生成杂点
								img<<vColorData[0].to_i
						   else
						   		begin
									pp=vNumberData[vCode[ii]][(9-i) * 10 + iii ].to_i-48
									img<<vColorData[pp]
								rescue
									print("iii:#{iii} ii:#{ii}  i:#{i}  pp:#{pp}   #{i * 10 + iii} \n")
								end
						   end
						   
					 end
			   end
		end
		img=pich+img
		#send_data img
		send_data image.data,  :disposition => 'inline'
		print "\n"
		print vCodes
	end
end
